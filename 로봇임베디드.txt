#!/usr/bin/env pybricks-micropython
from pybricks.hubs import EV3Brick
from pybricks.ev3devices import (Motor, TouchSensor, ColorSensor,
                                 InfraredSensor, UltrasonicSensor, GyroSensor)
from pybricks.parameters import Port, Stop, Direction, Button, Color
from pybricks.tools import wait, StopWatch, DataLog
from pybricks.robotics import DriveBase
from pybricks.media.ev3dev import SoundFile, ImageFile


# This program requires LEGO EV3 MicroPython v2.0 or higher.
# Click "Open user guide" on the EV3 extension tab for more information.


# Create your objects here.
ev3 = EV3Brick()


# Write your program here.
left_motor = Motor(Port.B) #왼쪽모터 B포트 모터 초기화
right_motor = Motor(Port.D) #오른쪽 모터 D포트 모터 초기화

robot = DriveBase(left_motor, right_motor,55.5,104) #드라이브베이스 초기화

robot.straight(100) #10cm 전진
robot.straight(-100) #10cm 후진

robot.turn(90) #90도 회전
robot.turn(-90) #-90도 회전

cs = ColorSensor(Port.S3) #컬러센서 초기화
color = cs.color() #색상을 읽는다
reflection = cs.reflection() #반사광을 읽는다
ambient = cs.ambient() #주변광값을 읽는다


ev3.speaker.beep()
#wait(100)#100ms 동안 기다린다
#ev3.speaker.beep(1500,1000)#1500Hz의 주파수를 1000ms 동안 재생한다


robot.drive(250,0) #속도 100mm/s, 회전 속도 = 0 deg/s
wait(1000)
robot.stop()

ultra = UltrasonicSensor(Port.S2)
distance = ultra.distance() #물체 사이의 거리 반환(단위: mm)
print(distance)



robot.drive(100,0)

#200mm 까지 직진, 200mm이면 뒤로 100mm

while ultra.distance() > 200 :
    pass
    
    
robot.straight(-100)
    
robot.stop()

#빨간색을 인식하면 멈춘다

while cs.color() != Color.RED: #GREEN BLUE
    pass

robot.stop()

#검은색이면 -20, 아니면 20도 꺾으면서 직진

while True:
    if cs.color() == Color.BLACK:
        robot.drive(100,-20)
    else:
        robot.drive(100,20)

# 반사광이 얼마냐에 따라 방향 조절-> 부드럽게 움직인다

black = 7
white = 57
th = (black + white) / 2
drive_speed = 100
gain = 1.2

while True:
    deviation = cs.reflection()-th
    turn_rate = gain*deviation
    robot.drive(drive_speed,turn_rate)
    wait(10)

#그랩 사용하기

grab_motor = Motor(Port.A)

grab_motor.run_until_stalled(200, then = Stop.COAST,duty_limit = 50)
